name: build

on:
  release:
    types:
      - released
  workflow_dispatch: {}

jobs:
  prebuild:
    strategy:
      matrix:
        os:
          - windows-2019
          - ubuntu-18.04
          - macos-latest
    name: Prebuild on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v2
        with:
          node-version: 16

      - name: wget - linux
        if: matrix.os == 'ubuntu-18.04'
        run: |
          curl -O https://octodb.io/download/octodb-free-linux-x86_64.tar.gz
          tar xf octodb-free-linux-x86_64.tar.gz
          sudo ./install
      - name: wget - macos
        if: matrix.os == 'macos-latest'
        run: |
          curl -O https://octodb.io/download/octodb-free-mac-x86_64.tar.gz
          tar xf octodb-free-mac-x86_64.tar.gz
          sudo ./install
      - name: wget - windows
        if: matrix.os == 'windows-2019'
        run: |
          cd deps
          curl.exe -O https://octodb.io/download/octodb-free-windows-x86_64.tar.gz
          tar xf octodb-free-windows-x86_64.tar.gz
          cd ..

      - run: npm install --ignore-scripts

      - name: prebuild for node.js
        run: npx --no-install prebuild -r node -t 14.0.0 -t 16.0.0 -t 18.0.0 --include-regex 'better_sqlite3.node$' -u ${{ secrets.GITHUB_TOKEN }}

      - name: prebuild for electron - windows
        if: matrix.os == 'windows-2019'
        run: npx --no-install prebuild -r electron -t 16.0.0 -t 17.0.0 -t 18.0.0 -t 19.0.0 -t 20.0.0                     --include-regex 'better_sqlite3.node$' -u ${{ secrets.GITHUB_TOKEN }}
      - name: prebuild for electron - others
        if: matrix.os != 'windows-2019'
        run: npx --no-install prebuild -r electron -t 16.0.0 -t 17.0.0 -t 18.0.0 -t 19.0.0 -t 20.0.0 -t 21.0.0 -t 22.0.0 --include-regex 'better_sqlite3.node$' -u ${{ secrets.GITHUB_TOKEN }}

      - name: macos arm
        if: matrix.os == 'macos-latest'
        run: |
          curl -O https://octodb.io/download/octodb-free-mac-arm64.tar.gz
          tar xf octodb-free-mac-arm64.tar.gz
          sudo ./install
          npx --no-install prebuild -r node -t 14.0.0 -t 16.0.0 -t 18.0.0 --include-regex 'better_sqlite3.node$' -u ${{ secrets.GITHUB_TOKEN }} --arch arm64
          npx --no-install prebuild -r electron -t 16.0.0 -t 17.0.0 -t 18.0.0 -t 19.0.0 -t 20.0.0 -t 21.0.0 -t 22.0.0 --include-regex 'better_sqlite3.node$' -u ${{ secrets.GITHUB_TOKEN }} --arch arm64

      # - name: windows x86
      #   if: matrix.os == 'windows-2019'
      #   run: |
      #     cd deps
      #     curl.exe -O https://octodb.io/download/octodb-free-windows-x86.tar.gz
      #     tar xf octodb-free-windows-x86.tar.gz
      #     cd ..
      #     npx --no-install prebuild -r node -t 14.0.0 -t 16.0.0 -t 18.0.0 --include-regex 'better_sqlite3.node$' -u ${{ secrets.GITHUB_TOKEN }} --arch ia32
      #     npx --no-install prebuild -r electron -t 16.0.0 -t 17.0.0 -t 18.0.0 -t 19.0.0 -t 20.0.0 -t 21.0.0 -t 22.0.0 --include-regex 'better_sqlite3.node$' -u ${{ secrets.GITHUB_TOKEN }} --arch ia32


  prebuild-alpine:
    name: Prebuild on alpine
    runs-on: ubuntu-latest
    container: node:16-alpine
    steps:
      - uses: actions/checkout@v2
      - run: apk add build-base git python3 curl --update-cache
      - name: download octodb
        run: |
          curl -O https://octodb.io/download/octodb-free-alpine-x86_64.tar.gz
          tar xf octodb-free-alpine-x86_64.tar.gz
          ./install
      - run: npm install --ignore-scripts
      - name: prebuild for node.js
        run: npx --no-install prebuild -r node -t 14.0.0 -t 16.0.0 -t 18.0.0 --include-regex 'better_sqlite3.node$' -u ${{ secrets.GITHUB_TOKEN }}

  prebuild-alpine-arm:
    strategy:
      matrix:
        arch:
          - arm64
          - arm/v7
    name: Prebuild on alpine (${{ matrix.arch }})
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: docker/setup-qemu-action@v1
      - name: build on docker
        run: |
          arch="$(echo ${{matrix.arch}} | sed 's/\///')"
          docker run --rm -v $(pwd):/tmp/project --entrypoint /bin/sh --platform linux/${{ matrix.arch }} node:16-alpine -c "\
          apk add build-base git python3 curl --update-cache && \
          cd /tmp/project && \
          curl -O https://octodb.io/download/octodb-free-alpine-${arch}.tar.gz && \
          tar xf octodb-free-alpine-${arch}.tar.gz && \
          ./install && \
          npm install --ignore-scripts && \
          npx --no-install prebuild -r node -t 14.0.0 -t 16.0.0 -t 18.0.0 --include-regex 'better_sqlite3.node$' -u ${{ secrets.GITHUB_TOKEN }}"

  prebuild-linux-arm:
    strategy:
      matrix:
        arch:
          - arm64
          - arm/v7
    name: Prebuild on Linux (${{ matrix.arch }})
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: docker/setup-qemu-action@v1
      - name: build on docker
        run: |
          arch="$(echo ${{matrix.arch}} | sed 's/\///')"
          docker run --rm -v $(pwd):/tmp/project --entrypoint /bin/sh --platform linux/${{ matrix.arch }} node:16 -c "\
          cd /tmp/project && \
          curl -O https://octodb.io/download/octodb-free-linux-${arch}.tar.gz && \
          tar xf octodb-free-linux-${arch}.tar.gz && \
          ./install && \
          npm install --ignore-scripts && \
          npx --no-install prebuild -r node -t 14.0.0 -t 16.0.0 -t 18.0.0 --include-regex 'better_sqlite3.node$' -u ${{ secrets.GITHUB_TOKEN }}"
